generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ProtocolSections {
  bibliography   ProtocolSectionsBibliography
  budget         ProtocolSectionsBudget
  description    ProtocolSectionsDescription
  duration       ProtocolSectionsDuration
  identification ProtocolSectionsIdentification
  introduction   ProtocolSectionsIntroduction
  methodology    ProtocolSectionsMethodology
  publication    ProtocolSectionsPublication
}

type ProtocolSectionsBibliography {
  chart ProtocolSectionsBibliographyChart[]
}

type ProtocolSectionsBibliographyChart {
  author String
  title  String
  year   String
}

type ProtocolSectionsBudget {
  expenses ProtocolSectionsBudgetExpenses[]
}

type ProtocolSectionsBudgetExpenses {
  amount String
  detail String
  type   String
  year   String
}

type ProtocolSectionsDescription {
  discipline String
  field      String
  line       String
  objective  String
  type       String
  words      String
}

type ProtocolSectionsDuration {
  chronogram ProtocolSectionsDurationChronogram[]
  duration   String
  modality   String
}

type ProtocolSectionsDurationChronogram {
  semester String
  task     String
}

type ProtocolSectionsIdentification {
  assignment String
  career     String
  sponsor    String
  team       ProtocolSectionsIdentificationTeam[]
  title      String
}

type ProtocolSectionsIdentificationTeam {
  hours     String
  last_name String
  name      String
  role      String
}

type ProtocolSectionsIntroduction {
  justification String
  objectives    String
  problem       String
  state         String
}

type ProtocolSectionsMethodology {
  analysis       String?
  considerations String?
  design         String?
  instruments    String?
  participants   String?
  place          String?
  procedures     String?
  detail         String?
  type           String
}

type ProtocolSectionsPublication {
  plan   String
  result String
}

model protocol {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime         @db.Date
  sections  ProtocolSections
}

model reviews {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model user {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  id_       String?   @map("id")
  image     String?
  lastLogin DateTime? @db.Date
  name      String?
  password  String?
  role      String
}


// ! Leave commented unless you need to re-generate... and adapt (hand-made)
// generator zod {
//   provider                         = "zod-prisma-types"
//   output                           = "./zod"
//   useMultipleFiles                 = false 
//   createInputTypes                 = false
//   createModelTypes                 = true
//   addInputTypeValidation           = false 
//   addIncludeType                   = true
//   addSelectType                    = true 
//   validateWhereUniqueInput         = true
//   createOptionalDefaultValuesTypes = false
//   createRelationValuesTypes        = true 
//   createPartialTypes               = false 
//   useDefaultValidators             = false 
//   coerceDate                       = true
//   writeNullishInModelTypes         = false 
// }